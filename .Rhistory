?correctly_matched
head(all_dyad_df)
str(all_dyad_df$cong)
zip_cds116 <- subset(all_dyad_df, cong=="116" )
zip_cds116cm <- correctly_matched(zip_cds116, id1 = "ZCTA5CE10", id2="cd")
View(zip_cds116cm)
race_herfindahl
race_herfindahl_scores
78000000*0.001
#############################################################################
library(foreign)
library(wru)
library(zipWRUext2)
library(stringi)
library(stringr)
library(haven)
library(tidyverse)
library(data.table)
library(ggplot2)
library(plm)
library(clusterSEs)
options(stringsAsFactors = FALSE)
######################################
### set working directory
main_wd <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(main_wd)
### read in the data from the fec
fec_all_years_cleaned <- readRDS("new_fec_data/fec_all_years_cleaned.rds")
ajps_dta <- haven::read_dta("Candidate_Details_File.dta")
### Get the data merged onto the dataverse data
### I believe that I should be able to get everything merged if I go with name, district, state, year
ajps_dta$lastname <- str_to_upper(ajps_dta$lastname)
ajps_dta$district <- str_pad(ajps_dta$district, width=2, side="left", pad="0")
fec_all_years_cleaned$district <- str_pad(fec_all_years_cleaned$district, width=2, side="left", pad="0")
### The AJPS data has district for senators start as 1; therefore, I'll want to change this in my data
fec_all_years_cleaned$district[fec_all_years_cleaned$district=="00"] <- "01"
sort(unique(fec_all_years_cleaned$district))
sort(unique(ajps_dta$district)) # looks good
###Let's' extract out duplicate data, in case there is any
nrow(fec_all_years_cleaned)
#fec_all_years_cleaned <- fec_all_years_cleaned[!duplicated(c(fec_all_years_cleaned$fullname,fec_all_years_cleaned$state_po,
#                                                            fec_all_years_cleaned$district,fec_all_years_cleaned$chamber,
#                                                           fec_all_years_cleaned$year)), ]
nrow(fec_all_years_cleaned)
table(fec_all_years_cleaned$year)
##drop empty data
ajps_dta <- subset(ajps_dta, lastname!="")
##check how many are missing for candidate
sort(unique(ajps_dta$candidate))[1:10]
length(which(ajps_dta$candidate==""))/nrow(ajps_dta) # 0.3020558 are missing the candidate field. We will therefore want to merge first
# the obs with non missing cands, then work from there
##splitting ajps data
ajps_dta_nonmissing <- subset(ajps_dta, candidate!="")
ajps_dta_missing <- subset(ajps_dta, candidate=="")
nrow(ajps_dta)
### Now let's merge based on FEC ID
ajps_dta2nonmissing <- merge(ajps_dta_nonmissing, fec_all_years_cleaned, by.x=c("year","candidate"),
by.y=c("year","candidate_id") )
nrow(ajps_dta_nonmissing) - nrow(ajps_dta2nonmissing) # 1421 removed; why?
##An all X merge
ajps_dta2nonmissing_allX <- merge(ajps_dta_nonmissing, fec_all_years_cleaned, by.x=c("year","candidate"),
by.y=c("year","candidate_id"), all.x=T )
# now subset
ajps_dta2nonmissing_allX <- subset(ajps_dta2nonmissing_allX, is.na(pred.whi)==T)
### WE should try to merge just on candidate
ajps_dta2nonmissing_allX <- ajps_dta2nonmissing_allX[,c(1:33)]
colnames(ajps_dta2nonmissing_allX)[colnames(ajps_dta2nonmissing_allX)=="district.x"] <- "district"
ajps_dta2nonmissing_allX2 <- merge(ajps_dta2nonmissing_allX, fec_all_years_cleaned, by.x="candidate", by.y="candidate_id")
nrow(ajps_dta2nonmissing_allX2) # 376 merged thanks to this ; is something
names(ajps_dta2nonmissing_allX2)
ajps_dta2nonmissing_allX2 <- subset(ajps_dta2nonmissing_allX2, select=-c(year.y, district.y))
colnames(ajps_dta2nonmissing_allX2)[colnames(ajps_dta2nonmissing_allX2)=="district.x"] <- "district"
colnames(ajps_dta2nonmissing_allX2)[colnames(ajps_dta2nonmissing_allX2)=="year.x"] <- "year"
##subset for other data
ajps_dta2nonmissing <- subset(ajps_dta2nonmissing, select=-c(district.y))
colnames(ajps_dta2nonmissing)[colnames(ajps_dta2nonmissing)=="district.x"] <- "district"
### now bind
ajps_dta2nonmissing <- rbind(ajps_dta2nonmissing,ajps_dta2nonmissing_allX2)
###Check for duplicates
ajps_dta2nonmissing$dum = 1
ajps_dta2nonmissing <- ajps_dta2nonmissing %>% group_by(state,district,year,candidate) %>% mutate(duplicates=sum(dum))
##potential duplicates
ajps_dta2dups <- subset(ajps_dta2nonmissing, duplicates > 1)
nrow(ajps_dta2dups) # # 20 ro
ajps_dta2dups <- ajps_dta2dups[!duplicated(ajps_dta2dups$candidate), ]
ajps_dta2nonmissing <- subset(ajps_dta2nonmissing, duplicates == 1 )
ajps_dta2nonmissing <- rbind(ajps_dta2nonmissing,ajps_dta2dups)
ajps_dta2nonmissing2 <- subset(ajps_dta2nonmissing,is.na(nonwhite)==FALSE & is.na(pctwhite)==F & is.na(female)==F & is.na(incumbent)==F &
is.na(poSimple)==F )
length(which(ajps_dta2nonmissing2$numberofcandidates>1)) # 1590;
2296 - length(which(ajps_dta2nonmissing2$numberofcandidates>1)) #this means that there needs to be 706 found observations in
ajps_dta_missing2 <- subset(ajps_dta_missing,is.na(nonwhite)==FALSE & is.na(pctwhite)==F & is.na(female)==F & is.na(incumbent)==F &
is.na(poSimple)==F )
nrow(ajps_dta_missing2) # only 232 observations; that is progress.
nrow(ajps_dta2nonmissing2) + nrow(ajps_dta_missing2) # 2148;
ajps_dta_missing2 <- merge(ajps_dta_missing2, fec_all_years_cleaned, by.x=c("state","district","year"),
by.y=c("state_po","district","year") )
ajps_dta_missing2$agrep_x <- 0
ajps_dta_missing2$agrep_y <- 0
ajps_dta_missing2 <- subset(ajps_dta_missing2, is.na(lastname)==FALSE)
ajps_dta_missing2 <- subset(ajps_dta_missing2, is.na(surname)==FALSE)
nrow(ajps_dta_missing2) # 2412
ajps_dta_missing2$agrep_x <- 0
ajps_dta_missing2$agrep_y <- 0
for(i in 1:nrow(ajps_dta_missing2)){
a = unlist(strsplit(ajps_dta_missing2$lastname[i],""))
b = unlist(strsplit(ajps_dta_missing2$surname[i],""))
matches_vec <- sum(!is.na(pmatch(a,b)))
matches_vec_frac <- matches_vec/sum(nchar(a))
matches_vec2 <- sum(!is.na(pmatch(b,a)))
matches_vec_frac2 <- matches_vec/sum(nchar(b))
### now store in the data
ajps_dta_missing2$agrep_x[i] <-  matches_vec_frac
ajps_dta_missing2$agrep_y[i] <-  matches_vec_frac2
}
ajps_dta_missing3 <- subset(ajps_dta_missing2, agrep_x != 0 & agrep_y != 0 )
nrow(ajps_dta_missing3) # only 182 observations; seems like we should be good
quantile(ajps_dta_missing2$agrep_x, seq(0,1,by=0.1))
quantile(ajps_dta_missing2$agrep_x, seq(0,1,by=0.1))
quantile(ajps_dta_missing2$agrep_y, seq(0,1,by=0.1))
ajps_dta_missing3 <- subset(ajps_dta_missing3, agrep_x > 0.5 & agrep_y > 0.5)
nrow(ajps_dta_missing3)
write.csv(ajps_dta_missing3, "ajps_dta_missing3export.csv", row.names = FALSE)
ajps_dta_missing3 <- read.csv("ajps_dta_missing3export.csv")
names(ajps_dta_missing3)
ajps_dta_missing3 <- read.csv("ajps_dta_missing3export_edits.csv")
length(which(ajps_dta_missing3$match==1 & ajps_dta_missing3$agrep_x < 1))
length(which(ajps_dta_missing3$match==1 & ajps_dta_missing3$agrep_y < 1)) # 0
ajps_dta_missing3 <- subset(ajps_dta_missing3, match == 1)
nrow(ajps_dta_missing3)
summary(nchar(ajps_dta_missing3$district))
View(ajps_dta_missing3)
ajps_dta_missing3$district <- str_pad(ajps_dta_missing3$district, width=2,side="left",pad="0")
ajps_dta_missing3$zcta5 <- str_pad(ajps_dta_missing3$zcta5, width=5,side="left",pad="0")
ajps_dta_missing3 <- subset(ajps_dta_missing3, select=-c(agrep_x,agrep_y,match))
ajps_dta_missing3$dum = 1
ajps_dta_missing3 <- ajps_dta_missing3 %>% group_by(state,district,year,lastname) %>% mutate(duplicates=sum(dum))
ajps_dta_missing3dups <- subset(ajps_dta_missing3, duplicates > 1)# 0 rows; good here
nrow(ajps_dta_missing3dups) # 12 observations; check these out
ajps_dta_missing3nondups <- subset(ajps_dta_missing3, duplicates == 1)
View(ajps_dta_missing3dups)
ajps_dta_missing3dups <- subset(ajps_dta_missing3dups, candidate_id!="")
ajps_dta_missing3dups <- subset(ajps_dta_missing3dups, fullname != "PARKER, JAMES JOHN")
ajps_dta_missing3dups <- subset(ajps_dta_missing3dups, fullname != "CHADWICK, MICHAEL L" & chamber!="S")
ajps_dta_missing3 <- read.csv("ajps_dta_missing3export_edits.csv")
length(which(ajps_dta_missing3$match==1 & ajps_dta_missing3$agrep_x < 1)) # 0
length(which(ajps_dta_missing3$match==1 & ajps_dta_missing3$agrep_y < 1)) # 1
ajps_dta_missing3 <- subset(ajps_dta_missing3, match == 1)
nrow(ajps_dta_missing3) # 185.
summary(nchar(ajps_dta_missing3$district)) # string padding removed; fix
ajps_dta_missing3$district <- str_pad(ajps_dta_missing3$district, width=2,side="left",pad="0")
ajps_dta_missing3$zcta5 <- str_pad(ajps_dta_missing3$zcta5, width=5,side="left",pad="0")
ajps_dta_missing3 <- subset(ajps_dta_missing3, select=-c(agrep_x,agrep_y,match))
ajps_dta_missing3$dum = 1
ajps_dta_missing3 <- ajps_dta_missing3 %>% group_by(state,district,year,lastname) %>% mutate(duplicates=sum(dum))
ajps_dta_missing3dups <- subset(ajps_dta_missing3, duplicates > 1)# 0 rows; good here
nrow(ajps_dta_missing3dups) #  observations; check these out
ajps_dta_missing3nondups <- subset(ajps_dta_missing3, duplicates == 1)
ajps_dta_missing3dups <- subset(ajps_dta_missing3dups, candidate_id!="")
ajps_dta_missing3dups <- subset(ajps_dta_missing3dups, fullname != "PARKER, JAMES JOHN")
ajps_dta_missing3dups <- ajps_dta_missing3dups[-1,]
ajps_dta_missing4 <- rbind(ajps_dta_missing3nondups,ajps_dta_missing3dups)
dim(ajps_dta_missing4)
dim(ajps_dta2nonmissing2)
names(ajps_dta2nonmissing2)
names(ajps_dta_missing4)
ajps_dta2nonmissing2 <- subset(ajps_dta2nonmissing2, select=-c(dum,duplicates))
ajps_dta2nonmissing2 <- subset(ajps_dta2nonmissing2, select=-c(state_po))
dim(ajps_dta_missing4)
dim(ajps_dta2nonmissing2)
ajps_dta_missing4 <- subset(ajps_dta_missing4, select=-c(candidate_id,dum,duplicates))
dim(ajps_dta_missing4)
dim(ajps_dta2nonmissing2)
nrow(ajps_dta2nonmissing2)
ajps_dta_final <- rbind(ajps_dta2nonmissing2,ajps_dta_missing4)
table(ajps_dta_final$white, ajps_dta_final$democrat)
table(ajps_dta_final$black, ajps_dta_final$democrat)
ajps_dta_summaries_race <- ajps_dta_final %>% group_by(democrat) %>%
summarize(white=sum(white), black=sum(black), hispanic=sum(hispanic), asian=sum(asian))
ajps_dta_summaries_race_bisg <- ajps_dta_final %>%
group_by(democrat) %>%
summarize(bisg_white = sum(pred.whi), bisg_black=sum(pred.bla),
bisg_his=sum(pred.his), bisg_asi=sum(pred.asi))
ajps_dta_final$bisg_white <- 0
ajps_dta_final$bisg_white[ajps_dta_final$plural_race=="white"] <- 1
ajps_dta_final$bisg_black <- 0
ajps_dta_final$bisg_black[ajps_dta_final$plural_race=="black"] <- 1
ajps_dta_final$bisg_hispanic <- 0
ajps_dta_final$bisg_hispanic[ajps_dta_final$plural_race=="hispanic"] <- 1
ajps_dta_final$bisg_asian <- 0
ajps_dta_final$bisg_asian[ajps_dta_final$plural_race=="asian"] <- 1
ajps_dta_final$bisg_other <- 0
ajps_dta_final$bisg_other[ajps_dta_final$plural_race=="other"] <- 1
ajps_dta_summaries_race_plural <- ajps_dta_final %>% group_by(democrat) %>%
summarize(bisg_white=sum(bisg_white), bisg_black=sum(bisg_black), bisg_hispanic=sum(bisg_hispanic), bisg_asian=sum(bisg_asian))
race_vec <- c("white","black","hispanic","asian")
ajps_dta_summaries_race_plural <- transpose(ajps_dta_summaries_race_plural[,-1])
colnames(ajps_dta_summaries_race_plural) <- c("republican","democrat")
ajps_dta_summaries_race_plural <- cbind(ajps_dta_summaries_race_plural, race_vec)
ajps_dta_summaries_race_plural <- ajps_dta_summaries_race_plural %>% gather("party","total_plural", -race_vec)
colnames(ajps_dta_summaries_race_plural)[1] <- c("race")
ajps_dta_summaries_race_bisg <- transpose(ajps_dta_summaries_race_bisg[,-1])
colnames(ajps_dta_summaries_race_bisg) <- c("republican","democrat")
ajps_dta_summaries_race_bisg <- cbind(ajps_dta_summaries_race_bisg, race_vec)
ajps_dta_summaries_race_bisg <- ajps_dta_summaries_race_bisg %>% gather("party","total_sum", -race_vec)
colnames(ajps_dta_summaries_race_bisg)[1] <- c("race")
ajps_dta_summaries_race <- transpose(ajps_dta_summaries_race[,-1])
colnames(ajps_dta_summaries_race) <- c("republican","democrat")
ajps_dta_summaries_race <- cbind(ajps_dta_summaries_race, race_vec)
ajps_dta_summaries_race <- ajps_dta_summaries_race %>% gather("party","total", -race_vec)
colnames(ajps_dta_summaries_race)[1] <- c("race")
nrow(ajps_dta_summaries_race)
nrow(ajps_dta_summaries_race_bisg)
nrow(ajps_dta_summaries_race_plural)
ajps_dta_summaries_race_all <- merge(ajps_dta_summaries_race,ajps_dta_summaries_race_bisg, by=c("party","race") )
ajps_dta_summaries_race_all <- merge(ajps_dta_summaries_race_all,ajps_dta_summaries_race_plural, by=c("party","race") )
ajps_dta_summaries_race_all$pct_diff_sum <- (abs(ajps_dta_summaries_race_all$total-ajps_dta_summaries_race_all$total_sum)/
ajps_dta_summaries_race_all$total)*100
ajps_dta_summaries_race_all$pct_diff_plural <- (abs(ajps_dta_summaries_race_all$total-ajps_dta_summaries_race_all$total_plural)/
ajps_dta_summaries_race_all$total)*100
write.csv(ajps_dta_summaries_race_all, "hassell_tab1.csv",row.names = FALSE)
ajps_dta_final$bisg_nonwhite <- 1 - ajps_dta_final$pred.whi
ajps_dta_final$plural_nonwhite <- 1
ajps_dta_final$plural_nonwhite[ajps_dta_final$plural_race=="white"] <- 0
ajps_dta_final$eff_num_races <- 1/ajps_dta_final$herf_weight
summary(ajps_dta_final$eff_num_races)
View(ajps_dta_final)
nonwhite_miss <- subset(ajps_dta_final, nonwhite != plural_nonwhite)
nrow(nonwhite_miss)
ajps_dta_final$nonwhite_mismatch <- 0
ajps_dta_final$nonwhite_mismatch[ajps_dta_final$nonwhite != ajps_dta_final$plural_nonwhite] <- 1
nonwhite_correct_match <- subset(ajps_dta_final, nonwhite == plural_nonwhite)
t.test(nonwhite_miss$eff_num_races, nonwhite_correct_match$eff_num_races)
partydonor_dta <- read_dta('AJPSReplicationDataFile.dta')
sort(unique(partydonor_dta$candid))[1:10]
sum(is.na(partydonor_dta$candid)) # 1248 are missing
partydonor_dta <- subset(partydonor_dta, select=c(state,district,candid,year,partydonors,amount,totaldonors))
partydonor_dta <- subset(partydonor_dta, is.na(candid)==FALSE)
partydonor_dta$district <- str_pad(partydonor_dta$district, width=2, pad="0",side="left")
sum(is.na(partydonor_dta$partydonors))
nrow(partydonor_dta)
sum(is.na(ajps_dta_final$candid)) # nothing is missing; should be able to do an exact merge
nrow(ajps_dta_final) # 2757
ajps_dta_final <- merge(ajps_dta_final,partydonor_dta, by=c("state","district","candid","year")  )
write.csv(ajps_dta_final, "AJPSReplicationDataFile_edited.csv", row.names = FALSE)
saveRDS(ajps_dta_final, "AJPSReplicationDataFile_edited.rds")
herf_density <- ggplot(data=ajps_dta_final, aes(x=eff_num_races,fill=as.factor(democrat))) +
geom_density(alpha=0.3) + xlim(1,5) + theme(legend.text = element_text(size=8),legend.title=element_text(size=10))+
labs(title = "", y="Density",x="Effective number of predicted races", fill="Party") +
scale_fill_discrete(name="Party",labels=c("Republican", "Democrat")) + theme_minimal()
herf_density
ggsave("eff_num_races_density.png",plot=herf_density,scale=1,width=4,height=3,units=c("in"),dpi=600 )
party_quant<- ajps_dta_final %>% group_by(democrat) %>%
summarise(quantile(eff_num_races, seq(0,1,by=0.05)))
party_quant$quantile_break <- c(seq(0,1,by=0.05),seq(0,1,by=0.05) )
colnames(party_quant)[2] <- "eff_num_races"
gop_quant <- subset(party_quant, democrat==0)
dem_quant <- subset(party_quant, democrat==1)
gop_quant <- subset(gop_quant, select=-c(democrat))
dem_quant <- subset(dem_quant, select=-c(democrat))
colnames(gop_quant)[1] <- "gop_eff_num"
colnames(dem_quant)[1] <- "dem_eff_num"
party_quant_wide <- merge(dem_quant,gop_quant, by="quantile_break")
party_quant_wide$party_diff <- party_quant_wide$dem_eff_num-party_quant_wide$gop_eff_num
write.csv(party_quant_wide, 'party_quant_wide_table.csv', row.names = FALSE)
saveRDS(party_quant_wide, "party_quant_wide_table.rds")
herf_density_match <- ggplot(data=ajps_dta_final, aes(x=eff_num_races,fill=as.factor(nonwhite_mismatch))) +
geom_density(alpha=0.3) + xlim(1,5) + theme(legend.text = element_text(size=8),legend.title=element_text(size=10))+
labs(title = "", y="Density",x="Effective number of predicted races", fill="Party") +
scale_fill_discrete(name="Matching accuracy",labels=c("Correctly matched", "Mismatch")) + theme_minimal()
herf_density_match
herf_density_match <- ggplot(data=ajps_dta_final, aes(x=eff_num_races,fill=as.factor(nonwhite_mismatch))) +
geom_density(alpha=0.3) + xlim(1,5) + theme(legend.text = element_text(size=8),legend.title=element_text(size=10))+
labs(title = "", y="Density",x="Effective number of predicted races", fill="Party") +
scale_fill_discrete(name="Matching accuracy",labels=c("Correctly matched", "Mismatch")) + theme_minimal()
herf_density_match
ggsave("eff_num_races_density_mismatch.png",plot=herf_density_match,scale=1,width=4,height=3,units=c("in"),dpi=600 )
View(ajps_dta_final)
dat_black_true <- subset(ajps_dta_final, black == 1)
dat_white_true <- subset(ajps_dta_final, white == 1)
table5whiteT <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_white_true, family=binomial(link = "logit"))
dat_black_true <- subset(ajps_dta_final, black == 1 & numberofcandidates>1)
dat_white_true <- subset(ajps_dta_final, white == 1 & numberofcandidates>1)
str(ajps_dta_final$raceid)
ajps_dta_final$raceid <- as.character(ajps_dta_final$raceid)
dat_black_true <- subset(ajps_dta_final, black == 1 & numberofcandidates>1)
dat_white_true <- subset(ajps_dta_final, white == 1 & numberofcandidates>1)
table5whiteT <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_white_true, family=binomial(link = "logit"))
table5blackT <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_black_true, family=binomial(link = "logit"))
dat_black_est <- subset(ajps_dta_final, bisg_black == 1 & numberofcandidates>1)
dat_white_est <- subset(ajps_dta_final, bisg_white == 1 & numberofcandidates>1)
summary(table5whiteT)
summary(table5blackT)
table5white_est_uw <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_white_est, family=binomial(link = "logit"))
table5black_est_uw <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_black_est, family=binomial(link = "logit"))
?isSingular
summary(table5white_est_uw)
summary(table5black_est_uw)
table5white_est_w <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_white_est, family=binomial(link = "logit"), weights = pred.whi)
table5black_est_w <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_black_est, family=binomial(link = "logit"), weights= pred.bla)
summary(table5white_est_w)
summary(table5black_est_w)
table5A <- glm(primarywin ~ partydonors + logamount + as.factor(nonwhite) + as.factor(female) + poSimple,
data=dat_test, family=binomial(link = "logit")  )
table5A <- cluster.im.glm(table5A, dat=dat_test, ~ raceid, drop=T)
dat_nonwhite_true <- subset(ajps_dta_final, white == 0 & numberofcandidates>1)
table5nonwhiteT <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_nonwhite_true, family=binomial(link = "logit"))
summary(table5nonwhiteT)
dat_nonwhite_est <- subset(ajps_dta_final, bisg_white == 0 & numberofcandidates>1)
table5nonwhite_est_uw <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_nonwhite_true, family=binomial(link = "logit"))
table5nonwhite_est_uw <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_nonwhite_true, family=binomial(link = "logit"))
table5nonwhite_est_w <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_nonwhite_true, family=binomial(link = "logit"), weights= bisg_nonwhite)
table5nonwhite_est_w <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_nonwhite_true, family=quasibinomial(link = "logit"), weights= bisg_nonwhite)
table5nonwhite_est_w <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_nonwhite_true, family=binomial(link = "logit"), weights= bisg_nonwhite)
summary(table5nonwhite_est_w)
summary(table5nonwhite_est_uw)
summary(table5nonwhiteT)
coef(table5blackT)
fixef(table5blackT)
fixef(table5black_est_uw)
fixef(table5black_est_w)
table3white_true <- plm(partydonors ~ pctwhite + female + incumbent + poSimple,
data=dat_white_true, index=c("raceid"))
table3black_true <- plm(partydonors ~ pctwhite + female + incumbent + poSimple,
data=dat_black_true, index=c("raceid"))
coef(table3white_true)
summary(table3white_true)
summary(dat_white_true$pctwhite)
summary(table3black_true)
table3white_true <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) poSimple,
data=dat_white_true, index=c("raceid"))
table3white_true <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_white_true, index=c("raceid"))
table3white_true <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_white_true, index=c("raceid"))
table3black_true <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_black_true, index=c("raceid"))
summary(table3white_true)
?plm
table3white_true <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_white_true, index=c("raceid"), model="random")
summary(table3white_true)
table3black_true <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_black_true,model="random", index=c("raceid"))
summary(table3black_true)
table5nonwhite_est_uw <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_nonwhite_est, family=binomial(link = "logit"))
table5nonwhite_est_w <- glmer(primarywin ~ partydonors + logamount + as.factor(democrat) + as.factor(female) + poSimple + (1|raceid),
data=dat_nonwhite_est, family=binomial(link = "logit"), weights= bisg_nonwhite)
summary(table5nonwhite_est_uw)
summary(table5nonwhite_est_w)
summary(table5nonwhiteT)
table3white_est_uw <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_white_est, index=c("raceid"), model="random")
table3black_est_uw <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_black_est,model="random", index=c("raceid"))
summary(table3black_est_uw)
summary(table3black_true)
table3black_est_uw <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_black_est,model="random", index=c("raceid"))
summary(table3black_est_uw)
nrow(table3black_true)
nrow(dat_black_est)
nrow(dat_white_true)
nrow(dat_black_est)
nrow(dat_black_true)
table3white_est_uw <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_white_est, index=c("raceid"), model="random", weights=pred.whi)
table3white_est_w <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_white_est, index=c("raceid"), model="random", weights=pred.whi)
table3black_est_w <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_black_est,model="random", index=c("raceid"), weights = pred.bla)
summary(table3black_est_w)
table3nonwhite_true <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_nonwhite_true, index=c("raceid"), model="random")
table3nonwhite_true <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_nonwhite_true, index=c("raceid"), model="random")
table3nonwhite_est_uw <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_nonwhite_est, index=c("raceid"), model="random", weights=bisg_nonwhite)
table3nonwhite_est_uw <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_nonwhite_est, index=c("raceid"), model="random")
table3nonwhite_est_w <- plm(partydonors ~ pctwhite + female + incumbent + as.factor(democrat) + poSimple,
data=dat_nonwhite_est, index=c("raceid"), model="random", weights=bisg_nonwhite)
summary(table3nonwhite_est_uw)
summary(table3nonwhite_true)
summary(table3nonwhite_est_w)
coef(table3nonwhite_true)
coef(table3nonwhite_est_uw)
coef(table3nonwhite_est_w)
summary(table3nonwhite_true)
summary(table3white_true)
summary(table3nonwhite_est_w)
summary(table3nonwhite_est_uw)
summary(table3nonwhite_true)
dat_nonwhite_est$resid_uw <- predict(table3nonwhite_est_uw)
predict(table3nonwhite_est_uw)
?predict
dat_nonwhite_est$resid_uw <- dat_nonwhite_est$partydonors - predict(table3nonwhite_est_uw)
dat_nonwhite_est$resid_w <- dat_nonwhite_est$partydonors - predict(table3nonwhite_est_w)
summary(dat_nonwhite_est$resid_uw)
quantile(dat_nonwhite_est$resid_uw, seq(0,1,0.05))
plot(dat_nonwhite_est$eff_num_races,dat_nonwhite_est$resid_uw)
dat_nonwhite_est$resid_uw <- sqrt((dat_nonwhite_est$partydonors - predict(table3nonwhite_est_uw))^2)
dat_nonwhite_est$resid_w <- sqrt((dat_nonwhite_est$partydonors - predict(table3nonwhite_est_w))^2)
quantile(dat_nonwhite_est$resid_uw, seq(0,1,0.05))
plot(dat_nonwhite_est$eff_num_races,dat_nonwhite_est$resid_uw)
plot(dat_nonwhite_est$eff_num_races,dat_nonwhite_est$resid_w)
plot(dat_nonwhite_est$bisg_nonwhite,dat_nonwhite_est$resid_w)
cor(dat_nonwhite_est$bisg_nonwhite,dat_nonwhite_est$resid_w)
test_sub <- subset(dat_nonwhite_est, resid_w > 40)
View(test_sub)
table5dem_true <- glmer(primarywin ~ partydonors + logamount + as.factor(nonwhite)*partydonors + as.factor(female)*partydonors +
poSimple + (1|raceid),
data=subset(ajps_dta_final, democrat == 1 & numberofcandidates>1))
table5dem_true <- glmer(primarywin ~ partydonors + logamount + as.factor(nonwhite)*partydonors + as.factor(female)*partydonors +
poSimple + (1|raceid),
data=subset(ajps_dta_final, democrat == 1 & numberofcandidates>1), family=binomial(link = "logit"))
summary(table5dem_true)
table5dem_bisg_uw <- glmer(primarywin ~ partydonors + logamount + as.factor(plural_nonwhite)*partydonors +
as.factor(female)*partydonors +poSimple + (1|raceid),
data=subset(ajps_dta_final, democrat == 1 & numberofcandidates>1), family=binomial(link = "logit"))
summary(table5dem_bisg_uw)
table5dem_bisg_w <- glmer(primarywin ~ partydonors + logamount + bisg_nonwhite*partydonors +
as.factor(female)*partydonors +poSimple + (1|raceid),
data=subset(ajps_dta_final, democrat == 1 & numberofcandidates>1), family=binomial(link = "logit"))
summary(table5dem_bisg_w)
fixef(table5dem_true)
fixef(table5dem_bisg_uw)
fixef(table5dem_bisg_w)
dem_ajps <- subset(ajps_dta_final, democrat == 1 & numberofcandidates>1)
predict(table5dem_bisg_uw)
dem_ajps$resid_uw <- sqrt((dem_ajps$primarywin-predict(table5dem_bisg_uw,type="response"))^2)
dem_ajps$resid_uw
summary(dem_ajps$resid_uw)
plot(dem_ajps$eff_num_races,dem_ajps$resid_uw)
plot(dem_ajps$bisg_nonwhite,dem_ajps$resid_uw)
cor(dem_ajps$bisg_nonwhite,dem_ajps$resid_uw)
dem_ajps$resid_w <- sqrt((dem_ajps$primarywin-predict(table5dem_bisg_w,type="response"))^2)
plot(dem_ajps$bisg_nonwhite,dem_ajps$resid_w)
cor(dem_ajps$bisg_nonwhite,dem_ajps$resid_w)
summary(table5dem_bisg_w)
summary(table5dem_true)
View(sources_dataframe)
library("devtools")
library("roxygen2")
library(usethis)
parentDirectory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(parentDirectory)
setwd("zipWRUext2")
usethis::use_data_raw(name = 'ga_sample_blocks')
usethis::use_data_raw(name = 'ga_sample_vf')
file.create("R/ga_sample_blocks.R")
file.create("R/ga_sample_vf.R")
sinew::makeOxygen(ga_sample_blocks)
View(wi_data)
head(wi_data)
sinew::makeOxygen(ga_sample_blocks)
?makeOxygen
document()
sinew::makeOxygen(ga_sample_blocks)
ga_sample_blocks <- readRDS("data-raw/ga_sample_blocks.rds")
ga_sample_vf <- readRDS("data-raw/ga_sample_vf.rds")
sinew::makeOxygen(ga_sample_blocks)
load("C:/Users/johna/Dropbox (Curiel Analytx)/Curiel Analytx Team Folder/zipWRUext2/zipWRUext2/data/sources_dataframe.rda")
save(ga_sample_blocks, file = "data/ga_sample_blocks.rda")
save(ga_sample_vf, file = "data/ga_sample_vf.rda")
document()
setwd(parentDirectory)
install("zipWRUext2")
library(zipWRUext2)
library("devtools")
library("roxygen2")
library(usethis)
parentDirectory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(parentDirectory)
document()
setwd("zipWRUext2")
document()
setwd(parentDirectory)
install("zipWRUext2")
library(zipWRUext2)
?predict_race_any
ga_data <-  zipWRUext2::ga_sample_vf
ga_block_sample <- zipWRUext2::ga_sample_blocks
ga_data2 <- predict_race_any(ga_data, ga_block_sample,  c("county","tract","block"))
library("devtools")
library("roxygen2")
library(usethis)
parentDirectory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(parentDirectory)
setwd("zipWRUext2")
document()
setwd(parentDirectory)
install("zipWRUext2")
library(zipWRUext2)
?predict_race_any
ga_data <-  zipWRUext2::ga_sample_vf
ga_block_sample <- zipWRUext2::ga_sample_blocks
ga_data2 <- predict_race_any(ga_data, ga_block_sample,  c("county","tract","block"))
