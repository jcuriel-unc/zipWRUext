setwd(parentDirectory)
document()
setwd("zipWRUext2")
document()
setwd(parentDirectory)
install("zipWRUext2")
library(zipWRUext2)
?predict_race_any
ga_data <-  zipWRUext2::ga_sample_vf
ga_block_sample <- zipWRUext2::ga_sample_blocks
ga_data2 <- predict_race_any(ga_data, ga_block_sample,  c("county","tract","block"))
library("devtools")
library("roxygen2")
library(usethis)
parentDirectory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(parentDirectory)
setwd("zipWRUext2")
document()
setwd(parentDirectory)
install("zipWRUext2")
library(zipWRUext2)
?predict_race_any
ga_data <-  zipWRUext2::ga_sample_vf
ga_block_sample <- zipWRUext2::ga_sample_blocks
ga_data2 <- predict_race_any(ga_data, ga_block_sample,  c("county","tract","block"))
library(foreign)
library(wru)
library(zipWRUext2)
library(stringi)
library(stringr)
library(tidyverse)
options(stringsAsFactors = FALSE)
setwd(main_wd)
main_wd <- dirname(rstudioapi::getActiveDocumentContext()$path)
main_wd <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(main_wd)
wi_data <- zipWRUext2::wi_data
wi_data4 <- zip_wru(wi_data, state="WISCONSIN",  year1="2010", zip_col="zcta5", surname_field = "lastname")
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
devtools::install_github("https://github.com/jcuriel-unc/zipWRUext", subdir="zipWRUext2")
library(zipWRUext2)
main_wd <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(main_wd)
wi_data <- zipWRUext2::wi_data
wi_data4 <- zip_wru(wi_data, state="WISCONSIN",  year1="2010", zip_col="zcta5", surname_field = "lastname")
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
head(wi_data4col)
library(gtools)
View(wi_data4)
wru_aggregate_pres
wi_data4col <- wi_data4col %>% group_by(group_n) %>% select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T)))
wi_data4col <- wi_data4col %>% group_by(zcta5) %>% select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T)))
head(wi_data4)
wi_data4col <- wi_data4col %>% group_by(zcta5) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T)))
wi_data4col
wi_data4col <- wi_data4 %>% group_by(zcta5) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T)))
wi_data4col
?apply
test_rdir <- apply(wi_data4col[,2:6], 1, rdirichlet(1000,))
test_rdir <- apply(wi_data4col[,2:6], 1, rdirichlet())
test_rdir <- rdirichlet(1000, wi_data4col[,2:6])
?rdirichlet
test_rdir <- rdirichlet(1000, wi_data4col[1,2:6])
test_rdir <- rdirichlet(1000, as.vector(wi_data4col[1,2:6]))
rdirichlet(1000, c(1,1,2))
as.vector(wi_data4col[1,2:6])
test_vec1 <- as.vector(wi_data4col[1,2:6])
test_vec1
test_vec1 <- as.vector( as.matrix(wi_data4col[1,2:6]))
test_vec1
test_vec1 <- as.vector( as.matrix(wi_data4col[,2:6]))
test_vec1
test_rdir <- rdirichlet(1000, test_vec1)
test_rdir
View(test_rdir)
dim(test_rdir)
nrow(wi_data4col)
1560/312
?apply
test_app_ci <- apply(test_rdir, 2, quantile(c(0.025,0.975)))
test_app_ci <- apply(test_rdir, 2, quantile, probs=c(0.025,0.5,0.975))
View(test_app_ci)
test_app_ci <- t(test_app_ci)
names(wi_data4col)
test_app_ci2 <- cbind.data.frame(wi_data4col, race=c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth"),
zcta5=wi_data4col$zcta5)
test_app_ci2 <- cbind.data.frame(wi_data4col, race=rep(c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth"),312),
zcta5=rep(wi_data4col$zcta5,5))
View(test_app_ci2)
test_app_ci2 <- cbind.data.frame(test_app_ci, race=rep(c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth"),312),
zcta5=rep(wi_data4col$zcta5,5))
library(tidyverse)
wru_aggregate_pres
test_wide_ci <- spread(test_app_ci2, key=race, value = ci, -zcta5)
test_wide_ci <- spread(test_app_ci2, key=race, value = "ci", -zcta5)
test_wide_ci <- spread(test_app_ci2, key=race, value = "2.5", -zcta5)
library(reshape2)
?dcast
colnames(test_app_ci2)[1:3] <- c("ci_low","ci_med","ci_up")
test_wide_ci <- spread(test_app_ci2, key=race, value = "ci_low", -zcta5)
test_wide_ci <- spread(test_app_ci2, key=race, value = "ci_low")
View(test_wide_ci)
test_wide_ci <- spread(test_app_ci2, key=race, value = ci_low:ci_up)
wru_aggregate_pres
View(test_app_ci2)
test_app_ci2_long <- spread(test_app_ci2, key=ci, value, ci_low:ci_up )
test_app_ci2_long <- gather(test_app_ci2, ci, value, ci_low:ci_up )
View(test_app_ci2_long)
?spread
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
stocksm %>% spread(stock, price)
test_wide_ci <- spread(test_app_ci2_long, key=race, value = ci )
test_wide_ci <- spread(test_app_ci2_long, key=race, value = ci )
View(test_wide_ci)
View(test_app_ci2_long)
test_wide_ci <- spread(test_app_ci2_long, key=race, value = value)
View(test_wide_ci)
test_wide_ci2 <- spread(test_wide_ci, ci, value)
df <- data.frame(month=rep(1:3,2),
student=rep(c("Amy", "Bob"), each=3),
A=c(9, 7, 6, 8, 6, 9),
B=c(6, 7, 8, 5, 6, 7))
df2 <- df %>%
gather(variable, value, -(month:student)) %>%
unite(temp, student, variable) %>%
spread(temp, value)
df2
df2 <- df %>%
gather(variable, value, -(month:student))
df2
?unite
df3 <-df2 %>%
unite(temp, student, variable)
df3
df4 <- df3 %>%
spread(temp, value)
df4
test_wide_ci <- spread(test_app_ci2_long, key=ci, value = estimate)
test_app_ci2_long
head
head(test_app_ci2_long)
test_wide_ci <- spread(test_app_ci2_long, key=ci, value = value)
View(test_wide_ci)
wru_aggregate_pres
test_wide_ci$new_low_ci <- round_preserve_sum(test_wide_ci$ci_low, 2)
test_wide_ci$new_med_ci <- round_preserve_sum(test_wide_ci$ci_med, 2)
test_wide_ci$new_up_ci <- round_preserve_sum(test_wide_ci$ci_up, 2)
test_wide_ci <- test_wide_ci[order(test_wide_ci$zcta5), ]
View(test_rdir)
?rdirichlet
View(test_app_ci)
View(wi_data4col)
head(wi_data4col)
total_pop_vec <- rowSums(wi_data4col[,2:6])
length(total_pop_vec)
total_pop_mat <- as.matrix(nrow=1500,ncol=1,rep(total_pop_vec,5))
head(total_pop_mat)
test_app_ci <- test_app_ci %*% total_pop_mat
test_app_ci <- test_app_ci %*% t(total_pop_mat)
test_app_ci <- test_app_ci * (total_pop_mat)
total_pop_mat <- as.matrix(nrow=1500,ncol=5,rep(total_pop_vec,5))
View(total_pop_mat)
total_pop_mat <- as.matrix(nrow=1500,ncol=5,c(rep(total_pop_vec,5),rep(total_pop_vec,5),rep(total_pop_vec,5),rep(total_pop_vec,5),
rep(total_pop_vec,5)))
dim(test_app_ci)
total_pop_mat <- as.matrix(nrow=1560,ncol=3,c(rep(total_pop_vec,5),rep(total_pop_vec,5),rep(total_pop_vec,5)))
total_pop_mat <- as.matrix(nrow=1560,ncol=3,cbind(rep(total_pop_vec,5),rep(total_pop_vec,5),rep(total_pop_vec,5)))
dim(total_pop_mat)
View(total_pop_mat)
test_app_ci <- test_app_ci * (total_pop_mat)
View(test_app_ci)
test_app_ci2 <- cbind.data.frame(test_app_ci, race=rep(c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth"),312),
zcta5=rep(wi_data4col$zcta5,5))
colnames(test_app_ci2)[1:3] <- c("ci_low","ci_med","ci_up")
test_app_ci2_long <- gather(test_app_ci2, ci, value, ci_low:ci_up )
test_wide_ci <- spread(test_app_ci2_long, key=ci, value = value)
View(test_wide_ci)
test_wide_ci <- test_wide_ci %>%
group_by(zcta5) %>%
mutate(zcta_pop=sum(ci_med))
summary(test_wide_ci$zcta_pop)
test_vec1
View(test_app_ci)
test_vec1
library(boot)
boot(test_vec1)
?boot
View(wi_data4col)
test_boot <-boot(test_vec1, sum, R=1000)
test_boot$t0
test_boot$t
test_rmnom <- rmultinom(1000, test_vec1)
test_vec1
dim(test_vec1)
length(test_vec1)
test_rmnom <- rmultinom(1000,size=5 ,prob=wi_data4col[,2:6])
test_rmnom <- rmultinom(1000,size=5 ,prob=wi_data4col[1,2:6])
class(test_rmnom)
View(test_rmnom)
names(wi_data4col)
wi_data4col$total_pop <- rowSums(wi_data4col[,2:6])
test_rmnom <- rmultinom(1000,size=wi_data4col$total_pop ,prob=wi_data4col[1,2:6])
View(test_rmnom)
test_rmnom <- rmultinom(1000,size=wi_data4col$total_pop ,prob=wi_data4col[,2:6])
prob_vec = as.matrix(prob=wi_data4col[,2:6])
prob_vec = as.matrix(wi_data4col[,2:6])
class(prob_vec)
dim(prob_vec)
test_rmnom <- rmultinom(1000,size=wi_data4col$total_pop ,prob=prob_vec)
View(test_rmnom)
dim(test_rmnom)
dim(test_rmnom)
agg_check <- colSums(test_rmnom)
head(agg_check)
head(wi_data4col$total_pop)
summary(agg_check)
head(wi_data4col)
normalize <- apply(wi_data4col, 1, function(x) rmultinom(1000, x[7], sd=x[2:6]))
wi_data4col$sample_size = 1000
normalize <- apply(wi_data4col, 1, function(x) rmultinom(x[8], x[7], sd=x[2:6]))
normalize <- apply(wi_data4col, 1, function(x) rmultinom(x[8], x[7], x[2:6]))
View(normalize)
dim(normalize)
ncol(5000  312)
ncol(normalize)
agg_check <- colSums(normalize)
head(agg_check)
?apply
agg_check <- rowSums(normalize)
head(agg_check)
head(normalize)
head(normalize[,1:10])
head(wi_data4col)
test_app_ci <- apply(normalize, 2, quantile, probs=c(0.025,0.5,0.975))
View(test_app_ci)
test_app_ci <- t(test_app_ci)
dim(test_app_ci)
test_app_ci <- apply(normalize, 1, quantile, probs=c(0.025,0.5,0.975))
test_app_ci <- t(test_app_ci)
dim(test_app_ci) # 312 rows, 3 cols; not good, as no longer are races present
View(test_app_ci)
df.whi <-  normalize[seq(1, nrow(normalize), 5), ]
dim(df.whi)
View(df.whi)
length(which(df.whi[,1]==1))
df.bla <- normalize[seq(2, nrow(normalize), 5), ]
df.his <- normalize[seq(3, nrow(normalize), 5), ]
df.asi <- normalize[seq(4, nrow(normalize), 5), ]
df.oth <- normalize[seq(5, nrow(normalize), 5), ]
test_whi_ci <- apply(df.whi, 2, quantile, probs=c(0.025,0.5,0.975))
View(test_whi_ci)
test_whi_ci <- t(test_whi_ci)
test_bla_ci <- apply(df.bla, 2, quantile, probs=c(0.025,0.5,0.975))
test_bla_ci <- t(test_bla_ci) #good, seems to have worked
test_his_ci <- apply(df.his, 2, quantile, probs=c(0.025,0.5,0.975))
test_his_ci <- t(test_his_ci) #good, seems to have worked
test_asi_ci <- apply(df.asi, 2, quantile, probs=c(0.025,0.5,0.975))
test_asi_ci <- t(test_asi_ci) #good, seems to have worked
test_oth_ci <- apply(df.oth, 2, quantile, probs=c(0.025,0.5,0.975))
test_oth_ci <- t(test_oth_ci) #good, seems to have worked
View(test_oth_ci)
class(test_whi_ci)
test_whi_ci <- as.data.frame(test_whi_ci)
names(test_whi_ci)
colnames(test_whi_ci) <- paste0("pred.whi",sep="_",colnames(test_whi_ci))
colnames(test_whi_ci)
colnames(test_bla_ci) <- paste0("pred.bla",sep="_",colnames(test_bla_ci))
colnames(test_his_ci) <- paste0("pred.his",sep="_",colnames(test_his_ci))
colnames(test_asi_ci) <- paste0("pred.asi",sep="_",colnames(test_asi_ci))
colnames(test_oth_ci) <- paste0("pred.oth",sep="_",colnames(test_oth_ci))
wi_data4col <- cbind(wi_data4col,test_whi_ci,test_bla_ci,test_his_ci,test_asi_ci,test_oth_ci)
View(wi_data4col)
wru_aggregate_pres
predNames = c("pred.whi",
"pred.bla", "pred.his", "pred.asi", "pred.oth")
wi_data4col$total_pop <- rowSums(.wi_data4col[predNames],)
wi_data4col$total_pop <- rowSums(wi_data4col[predNames],)
View(wi_data4col)
wi_data4col$total_pop <- rowSums(wi_data4col[predNames])
View(wi_data4col)
match(predNames,names(wi_data4col))
temp_vec<-match(predNames,names(wi_data4col))
normalize <- apply(wi_data4col, 1, function(x) rmultinom(x[8], x[7], x[temp_vec]))
dim(normalize) # 5000  312; num of zip codes preserved; means that the cols are zip codes; should colsum to pop
?rmultinom
wru_cis <- function(df,group_var="zcta5",predNames = c("pred.whi",
"pred.bla", "pred.his", "pred.asi", "pred.oth"),
ci_vec=c(0.025,0.5,0.975)){
colnames(df)[colnames(df) == group_var] <- "group_n"
## collapse the data by the grouping var and sum for the pred name vec
df_col <- df %>% group_by(group_n) %>% select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T)))
## get the total pop
df_col$total_pop <- rowSums(df_col[predNames]) # get total pop of area
df_col$sample_size = 1000 ## draw 1000 time
## get position of columns
pop_col <- match("total_pop",names(df_col))
samp_size_col = match("sample_size", names(df_col))
pred_name_cols <= match(predNames, names(df_col))
## now get the random sample
output_rmnom <- apply(df_col, 1, function(x) rmultinom(x[samp_size_col], x[pop_col], x[pred_name_cols]))
### now slice by race
df.whi <-  normalize[seq(1, nrow(normalize), 5), ]
df.bla <- normalize[seq(2, nrow(normalize), 5), ]
df.his <- normalize[seq(3, nrow(normalize), 5), ]
df.asi <- normalize[seq(4, nrow(normalize), 5), ]
df.oth <- normalize[seq(5, nrow(normalize), 5), ]
### now, get the confidence intervals
test_whi_ci <- apply(df.whi, 2, quantile, probs=ci_vec)
test_whi_ci <- t(test_whi_ci) #good, seems to have worked
## bla
test_bla_ci <- apply(df.bla, 2, quantile, probs=ci_vec)
test_bla_ci <- t(test_bla_ci) #good, seems to have worked
#his
test_his_ci <- apply(df.his, 2, quantile, probs=ci_vec)
test_his_ci <- t(test_his_ci) #good, seems to have worked
#asi
test_asi_ci <- apply(df.asi, 2, quantile, probs=ci_vec)
test_asi_ci <- t(test_asi_ci) #good, seems to have worked
# oth
test_oth_ci <- apply(df.oth, 2, quantile, probs=ci_vec)
test_oth_ci <- t(test_oth_ci) #good, seems to have worked
### rename the cols
colnames(test_whi_ci) <- paste0("pred.whi",sep="_",colnames(test_whi_ci)) # good, this worked; now repeat
colnames(test_bla_ci) <- paste0("pred.bla",sep="_",colnames(test_bla_ci))
colnames(test_his_ci) <- paste0("pred.his",sep="_",colnames(test_his_ci))
colnames(test_asi_ci) <- paste0("pred.asi",sep="_",colnames(test_asi_ci))
colnames(test_oth_ci) <- paste0("pred.oth",sep="_",colnames(test_oth_ci))
### now I should be ready to merge these
df_col <- cbind(df_col,test_whi_ci,test_bla_ci,test_his_ci,test_asi_ci,test_oth_ci)
### return the df
return(df_col)
}
wi_data4_cis <- wru_cis(wi_data4, group_var = "zcta5")
wru_cis <- function(df,group_var="zcta5",predNames = c("pred.whi",
"pred.bla", "pred.his", "pred.asi", "pred.oth"),
ci_vec=c(0.025,0.5,0.975)){
colnames(df)[colnames(df) == group_var] <- "group_n"
## collapse the data by the grouping var and sum for the pred name vec
df_col <- df %>% group_by(group_n) %>% select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T)))
## get the total pop
df_col$total_pop <- rowSums(df_col[predNames]) # get total pop of area
df_col$sample_size = 1000 ## draw 1000 time
## get position of columns
pop_col <- match("total_pop",names(df_col))
samp_size_col = match("sample_size", names(df_col))
pred_name_cols <- match(predNames, names(df_col))
## now get the random sample
output_rmnom <- apply(df_col, 1, function(x) rmultinom(x[samp_size_col], x[pop_col], x[pred_name_cols]))
### now slice by race
df.whi <-  normalize[seq(1, nrow(normalize), 5), ]
df.bla <- normalize[seq(2, nrow(normalize), 5), ]
df.his <- normalize[seq(3, nrow(normalize), 5), ]
df.asi <- normalize[seq(4, nrow(normalize), 5), ]
df.oth <- normalize[seq(5, nrow(normalize), 5), ]
### now, get the confidence intervals
test_whi_ci <- apply(df.whi, 2, quantile, probs=ci_vec)
test_whi_ci <- t(test_whi_ci) #good, seems to have worked
## bla
test_bla_ci <- apply(df.bla, 2, quantile, probs=ci_vec)
test_bla_ci <- t(test_bla_ci) #good, seems to have worked
#his
test_his_ci <- apply(df.his, 2, quantile, probs=ci_vec)
test_his_ci <- t(test_his_ci) #good, seems to have worked
#asi
test_asi_ci <- apply(df.asi, 2, quantile, probs=ci_vec)
test_asi_ci <- t(test_asi_ci) #good, seems to have worked
# oth
test_oth_ci <- apply(df.oth, 2, quantile, probs=ci_vec)
test_oth_ci <- t(test_oth_ci) #good, seems to have worked
### rename the cols
colnames(test_whi_ci) <- paste0("pred.whi",sep="_",colnames(test_whi_ci)) # good, this worked; now repeat
colnames(test_bla_ci) <- paste0("pred.bla",sep="_",colnames(test_bla_ci))
colnames(test_his_ci) <- paste0("pred.his",sep="_",colnames(test_his_ci))
colnames(test_asi_ci) <- paste0("pred.asi",sep="_",colnames(test_asi_ci))
colnames(test_oth_ci) <- paste0("pred.oth",sep="_",colnames(test_oth_ci))
### now I should be ready to merge these
df_col <- cbind(df_col,test_whi_ci,test_bla_ci,test_his_ci,test_asi_ci,test_oth_ci)
### return the df
return(df_col)
}
wi_data4_cis <- wru_cis(wi_data4, group_var = "zcta5")
View(wi_data4_cis)
wru_cis <- function(df,group_var="zcta5",predNames = c("pred.whi",
"pred.bla", "pred.his", "pred.asi", "pred.oth"),
ci_vec=c(0.025,0.5,0.975)){
colnames(df)[colnames(df) == group_var] <- "group_n"
## collapse the data by the grouping var and sum for the pred name vec
df_col <- df %>% group_by(group_n) %>% select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T)))
## get the total pop
df_col$total_pop <- rowSums(df_col[predNames]) # get total pop of area
df_col$sample_size = 1000 ## draw 1000 time
## get position of columns
pop_col <- match("total_pop",names(df_col))
samp_size_col = match("sample_size", names(df_col))
pred_name_cols <- match(predNames, names(df_col))
## now get the random sample
output_rmnom <- apply(df_col, 1, function(x) rmultinom(x[samp_size_col], x[pop_col], x[pred_name_cols]))
### now slice by race
df.whi <-  normalize[seq(1, nrow(normalize), 5), ]
df.bla <- normalize[seq(2, nrow(normalize), 5), ]
df.his <- normalize[seq(3, nrow(normalize), 5), ]
df.asi <- normalize[seq(4, nrow(normalize), 5), ]
df.oth <- normalize[seq(5, nrow(normalize), 5), ]
### now, get the confidence intervals
test_whi_ci <- apply(df.whi, 2, quantile, probs=ci_vec)
test_whi_ci <- t(test_whi_ci) #good, seems to have worked
## bla
test_bla_ci <- apply(df.bla, 2, quantile, probs=ci_vec)
test_bla_ci <- t(test_bla_ci) #good, seems to have worked
#his
test_his_ci <- apply(df.his, 2, quantile, probs=ci_vec)
test_his_ci <- t(test_his_ci) #good, seems to have worked
#asi
test_asi_ci <- apply(df.asi, 2, quantile, probs=ci_vec)
test_asi_ci <- t(test_asi_ci) #good, seems to have worked
# oth
test_oth_ci <- apply(df.oth, 2, quantile, probs=ci_vec)
test_oth_ci <- t(test_oth_ci) #good, seems to have worked
### rename the cols
colnames(test_whi_ci) <- paste0("pred.whi",sep="_",colnames(test_whi_ci)) # good, this worked; now repeat
colnames(test_bla_ci) <- paste0("pred.bla",sep="_",colnames(test_bla_ci))
colnames(test_his_ci) <- paste0("pred.his",sep="_",colnames(test_his_ci))
colnames(test_asi_ci) <- paste0("pred.asi",sep="_",colnames(test_asi_ci))
colnames(test_oth_ci) <- paste0("pred.oth",sep="_",colnames(test_oth_ci))
### now I should be ready to merge these
df_col <- cbind(df_col,test_whi_ci,test_bla_ci,test_his_ci,test_asi_ci,test_oth_ci)
df_col <- subset(df_col, -c(sample_size))
### return the df
return(df_col)
}
wi_data4_cis <- wru_cis(wi_data4, group_var = "zcta5")
wru_cis <- function(df,group_var="zcta5",predNames = c("pred.whi",
"pred.bla", "pred.his", "pred.asi", "pred.oth"),
ci_vec=c(0.025,0.5,0.975)){
colnames(df)[colnames(df) == group_var] <- "group_n"
## collapse the data by the grouping var and sum for the pred name vec
df_col <- df %>% group_by(group_n) %>% select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm = T)))
## get the total pop
df_col$total_pop <- rowSums(df_col[predNames]) # get total pop of area
df_col$sample_size = 1000 ## draw 1000 time
## get position of columns
pop_col <- match("total_pop",names(df_col))
samp_size_col = match("sample_size", names(df_col))
pred_name_cols <- match(predNames, names(df_col))
## now get the random sample
output_rmnom <- apply(df_col, 1, function(x) rmultinom(x[samp_size_col], x[pop_col], x[pred_name_cols]))
### now slice by race
df.whi <-  normalize[seq(1, nrow(normalize), 5), ]
df.bla <- normalize[seq(2, nrow(normalize), 5), ]
df.his <- normalize[seq(3, nrow(normalize), 5), ]
df.asi <- normalize[seq(4, nrow(normalize), 5), ]
df.oth <- normalize[seq(5, nrow(normalize), 5), ]
### now, get the confidence intervals
test_whi_ci <- apply(df.whi, 2, quantile, probs=ci_vec)
test_whi_ci <- t(test_whi_ci) #good, seems to have worked
## bla
test_bla_ci <- apply(df.bla, 2, quantile, probs=ci_vec)
test_bla_ci <- t(test_bla_ci) #good, seems to have worked
#his
test_his_ci <- apply(df.his, 2, quantile, probs=ci_vec)
test_his_ci <- t(test_his_ci) #good, seems to have worked
#asi
test_asi_ci <- apply(df.asi, 2, quantile, probs=ci_vec)
test_asi_ci <- t(test_asi_ci) #good, seems to have worked
# oth
test_oth_ci <- apply(df.oth, 2, quantile, probs=ci_vec)
test_oth_ci <- t(test_oth_ci) #good, seems to have worked
### rename the cols
colnames(test_whi_ci) <- paste0("pred.whi",sep="_",colnames(test_whi_ci)) # good, this worked; now repeat
colnames(test_bla_ci) <- paste0("pred.bla",sep="_",colnames(test_bla_ci))
colnames(test_his_ci) <- paste0("pred.his",sep="_",colnames(test_his_ci))
colnames(test_asi_ci) <- paste0("pred.asi",sep="_",colnames(test_asi_ci))
colnames(test_oth_ci) <- paste0("pred.oth",sep="_",colnames(test_oth_ci))
### now I should be ready to merge these
df_col <- cbind(df_col,test_whi_ci,test_bla_ci,test_his_ci,test_asi_ci,test_oth_ci)
### return the df
return(df_col)
}
wi_data4_cis <- wru_cis(wi_data4, group_var = "zcta5")
devtools::install_github("https://github.com/jcuriel-unc/zipWRUext", subdir="zipWRUext2")
library(zipWRUext2)
?wru_cis
wru_cis
library("devtools")
library("roxygen2")
library(usethis)
parentDirectory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(parentDirectory)
document()
library("devtools")
library("roxygen2")
library(usethis)
parentDirectory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(parentDirectory)
setwd("zipWRUext2")
document()
