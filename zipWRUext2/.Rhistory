merge_surnames_t <- function (voter.file, surname.year = 2010, clean.surname = T,
impute.missing = T)
{
if ("surname" %in% names(voter.file) == F) {
stop("Data does not contain surname field.")
}
if (surname.year == 2000) {
surnames2000$surname <- as.character(surnames2000$surname)
surnames <- surnames2000
}
else {
surnames2010$surname <- as.character(surnames2010$surname)
surnames <- surnames2010
}
p_eth <- c("p_whi", "p_bla", "p_his", "p_asi", "p_oth")
df <- voter.file
df$caseid <- 1:nrow(df)
df$surname.match <- df$surname.upper <- toupper(as.character(df$surname))
df <- merge(df[names(df) %in% p_eth == F], surnames[c("surname",
p_eth)], by.x = "surname.match", by.y = "surname", all.x = TRUE)
if (nrow(df[df$surname.upper %in% surnames$surname == F,
]) == 0) {
return(df[order(df$caseid), c(names(voter.file), "surname.match",
p_eth)])
}
df[df$surname.upper %in% surnames$surname == F, ]$surname.match <- ""
df1 <- df[df$surname.upper %in% surnames$surname, ]
df2 <- df[df$surname.upper %in% surnames$surname == F, ]
if (clean.surname) {
df2$surname.match <- gsub("[^[:alnum:] ]", "", df2$surname.upper)
df2 <- merge(df2[names(df2) %in% p_eth == F], surnames[c("surname",
p_eth)], by.x = "surname.match", by.y = "surname",
all.x = TRUE)
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df1 <- rbind(df1, df2[df2$surname.match %in% surnames$surname,
])
df2 <- df2[df2$surname.match %in% surnames$surname ==
F, ]
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df2$surname.match <- ""
}
}
df2$surname.match <- gsub(" ", "", df2$surname.match)
df2 <- merge(df2[names(df2) %in% p_eth == F], surnames[c("surname",
p_eth)], by.x = "surname.match", by.y = "surname",
all.x = TRUE)
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df1 <- rbind(df1, df2[df2$surname.match %in% surnames$surname,
])
df2 <- df2[df2$surname.match %in% surnames$surname ==
F, ]
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df2$surname.match <- ""
}
}
suffix <- c("JUNIOR", "SENIOR", "THIRD", "III", "JR",
" II", " J R", " S R", " IV")
for (i in 1:length(suffix)) {
df2$surname.match <- ifelse(substr(df2$surname.match,
nchar(df2$surname.match) - (nchar(suffix)[i] -
1), nchar(df2$surname.match)) == suffix[i],
substr(df2$surname.match, 1, nchar(df2$surname.match) -
nchar(suffix)[i]), df2$surname.match)
}
df2$surname.match <- ifelse(nchar(df2$surname.match) >=
7, ifelse(substr(df2$surname.match, nchar(df2$surname.match) -
1, nchar(df2$surname.match)) == "SR", substr(df2$surname.match,
1, nchar(df2$surname.match) - 2), df2$surname.match),
df2$surname.match)
df2 <- merge(df2[names(df2) %in% p_eth == F], surnames[c("surname",
p_eth)], by.x = "surname.match", by.y = "surname",
all.x = TRUE)
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df1 <- rbind(df1, df2[df2$surname.match %in% surnames$surname,
])
df2 <- df2[df2$surname.match %in% surnames$surname ==
F, ]
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df2$surname.match <- ""
}
}
df2$surname2 <- df2$surname1 <- NA
df2$surname1[grep("-", df2$surname.upper)] <- sapply(strsplit(grep("-",
df2$surname.upper, value = T), "-"), "[", 1)
df2$surname2[grep("-", df2$surname.upper)] <- sapply(strsplit(grep("-",
df2$surname.upper, value = T), "-"), "[", 2)
df2$surname1[grep(" ", df2$surname.upper)] <- sapply(strsplit(grep(" ",
df2$surname.upper, value = T), " "), "[", 1)
df2$surname2[grep(" ", df2$surname.upper)] <- sapply(strsplit(grep(" ",
df2$surname.upper, value = T), " "), "[", 2)
df2$surname.match <- as.character(df2$surname1)
df2 <- merge(df2[names(df2) %in% c(p_eth) == F], surnames[c("surname",
p_eth)], by.x = "surname.match", by.y = "surname",
all.x = TRUE)[names(df2)]
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df1 <- rbind(df1, df2[df2$surname.match %in% surnames$surname,
names(df2) %in% names(df1)])
df2 <- df2[df2$surname.match %in% surnames$surname ==
F, ]
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df2$surname.match <- ""
}
}
df2$surname.match <- as.character(df2$surname2)
df2 <- merge(df2[names(df2) %in% c(p_eth, "surname1",
"surname2") == F], surnames[c("surname", p_eth)],
by.x = "surname.match", by.y = "surname", all.x = TRUE)[names(df2) %in%
c("surname1", "surname2") == F]
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df1 <- rbind(df1, df2[df2$surname.match %in% surnames$surname,
names(df2) %in% names(df1)])
df2 <- df2[df2$surname.match %in% surnames$surname ==
F, ]
if (nrow(df2[df2$surname.match %in% surnames$surname,
]) > 0) {
df2$surname.match <- ""
}
}
}
if (impute.missing) {
if (nrow(df2) > 0) {
df2$surname.match <- ""
df2$p_whi <- 0.6665
df2$p_bla <- 0.0853
df2$p_his <- 0.1367
df2$p_asi <- 0.0797
df2$p_oth <- 0.0318
warning(paste("Probabilities were imputed for", nrow(df2),
ifelse(nrow(df2) == 1, "surname", "surnames"),
"that could not be matched to Census list."))
}
}
else warning(paste(nrow(df2), ifelse(nrow(df2) == 1, "surname was",
"surnames were"), "not matched."))
df <- rbind(df1, df2)
return(df[order(df$caseid), c(names(voter.file), "surname.match",
p_eth)])
}
surname <- c("RUSSELL", "JONES", "SMITH", "ALLEN")
y <- c("31302", "30339", "30040", "30030")
my_data <- data.frame(surname,y)
merge_surnames_t(my_data)
library(wru)
merge_surnames_t(my_data)
library("devtools")
library("roxygen2")
library(usethis)
setwd(parentDirectory)
parentDirectory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(parentDirectory)
setwd("zipWRUext2")
document()
setwd(parentDirectory)
setwd("zipWRUext2")
?makeOxygen
document()
document()
wru_aggregate_pres <- function(df, group_var=`zcta`, predNames=c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth")){
list.of.packages <- c("tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
## collapse the data by the groupvar
df_col <- df %>%
group_by(group_var) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
### now gather (i.e. make long) the data frame
df_long <- gather(df_col, race, total, -group_var)
### now run the preserve whol number command
df_long$total_new <- round_preserve_sum(df_long, 0)
## select out the old num
df_long <- subset(df_long, select=-c(total))
## now make into wide data again
df_wide <- spread(df_long, key=race, value=total_new)
return(df_wide)
}
wi_data <- zipWRUext2::wi_data
wi_data4 <- zip_wru(wi_data, state="WISCONSIN",  year1="2010", zip_col="zcta5", surname_field = "lastname")
names(wi_data4)
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = `zcta5`)
names('zcta5')
name('zcta5')
?vars
?vars
wru_aggregate_pres <- function(df, group_var="zcta5", predNames=c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth")){
list.of.packages <- c("tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
## collapse the data by the groupvar
df_col <- df %>%
group_by(vars(group_var)) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
### now gather (i.e. make long) the data frame
df_long <- gather(df_col, race, total, -group_var)
### now run the preserve whol number command
df_long$total_new <- round_preserve_sum(df_long, 0)
## select out the old num
df_long <- subset(df_long, select=-c(total))
## now make into wide data again
df_wide <- spread(df_long, key=race, value=total_new)
return(df_wide)
}
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
df <- wi_data4
group_var="zcta5"
df_col <- df %>%
group_by(vars(group_var)) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
df <- wi_data4
group_var="zcta5"
df_col <- df %>%
group_by(vars(group_var)) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
predNames <- c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth")
df_col <- df %>%
group_by(vars(group_var)) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
df_col
head(wi_data4)
df_col <- df %>%
group_by(vars(!!!group_var)) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
df_col
dim(wi_data4)
df_col <- df %>%
select(all_of(predNames, group_var))
c_new <- c(predNames, group_var)
df_col <- df %>%
select(all_of(c_new))
df_col
df_col <- df %>%
select(all_of(c_new)) %>%
summarise_at(across(where(is.numeric), ~sum(.x, na.rm=T)))
df_col <- df %>%
select(all_of(c_new)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
df_col
df_col <- df %>%
select(all_of(c_new)) %>%
group_by(select(all_of(c_new[6])))
c_new[6]
?all_of
df_col <- df %>%
select(all_of(c_new)) %>%
group_by(!!group_var)
df_col <- df %>%
select(all_of(c_new)) %>%
group_by(!!group_var) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
df_col
View(group_var)
View(df_col)
df_col <- df %>%
group_by(!!group_var) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
df_col
df_col <- df %>%
group_by(!group_var) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
df_col <- df %>%
group_by(!!!group_var) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
dim(df_col)
df_col <- df %>%
group_by(!!!group_var) %>%
select(all_of(c_new)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
dim(df_col)
df_col <- df %>%
group_by(vars(!!!group_var)) %>%
select(all_of(predNames)) %>%
summarise_at(where(is.numeric), var(!!group_var), ~sum(.x, na.rm=T))
?summarise_at
df_col <- df %>%
select(all_of(predNames)) %>%
summarise(across(-!!group_var), ~sum(.x, na.rm=T))
df_col <- df %>%
select(all_of(predNames)) %>%
summarise(across(-!!!group_var), ~sum(.x, na.rm=T))
df_col <- df %>%
select(all_of(c_new)) %>%
summarise(across(-!!group_var), ~sum(.x, na.rm=T))
df_col <- df %>%
select(all_of(c_new)) %>%
summarise_at(which(sapply(df, is.numeric) & names(df)!=group_var), ~sum(.x, na.rm=T))
group_var
df_col <- df %>%
select(all_of(c_new)) %>%
summarise_at(which(sapply(df, is.numeric) & names(df)!=group_var), sum(na.rm=T))
group_var="zcta5"
df_col <- df %>%
select(all_of(c_new)) %>%
summarise_at(which(sapply(df, is.numeric) & names(df)!=group_var), sum(na.rm=T))
names(df)!=group_var)
names(df)!=group_var
names(df)
?aggregate.data.frame
race_herfindahl_scores
df_col <- aggregate(df[predNames], list(df[group_var]))
df_col <- aggregate(df[predNames], list(df[group_var]), FUN=sum)
df[predNames]
df$group <- df[group_var]
df_col <- df %>%
group_by(group)
df_col <- df %>%
group_by(group) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
dim(df_col)
df_long <- gather(df_col, race, total, -group)
df_long$total_new <- round_preserve_sum(df_long, 0)
round_preserve_sum <- function(x, digits = 0) {
up <- 10 ^ digits
x <- x * up
y <- floor(x)
indices <- tail(order(x-y), round(sum(x)) - sum(y))
y[indices] <- y[indices] + 1
y2 <- y / up
return(y2)
}
df_long$total_new <- round_preserve_sum(df_long, 0)
df_long <- gather(df_col, race, total, -group)
df_long <- gather(df_col, race, total, -group)
str(df_long)
df_col <- df %>%
group_by(group) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
str(df_col)
df_long <- gather(df_col, race, total, -group)
str(df_long)
View(df_long)
df <- wi_data4
group_var="zcta5"
df$group_n <- df[group_var]
df_col <- df %>%
group_by(group_n) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
df_long <- gather(df_col, race, total, -group_n)
df_long <- gather(df_col, race, total, -group_n)
head(df_long)
df <- wi_data4
group_var="zcta5"
colnames(df)[colnames(df)==group_var] <- "group_n"
df_col <- df %>%
group_by(group_n) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
df_long <- gather(df_col, race, total, -group_n)
head(df_long)
df_long$total_new <- round_preserve_sum(df_long$total, 0)
df_long <- subset(df_long, select=-c(total))
df_wide <- spread(df_long, key=race, value=total_new)
head(df_wide)
wru_aggregate_pres <- function(df, group_var="zcta5", predNames=c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth")){
list.of.packages <- c("tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
## collapse the data by the groupvar
colnames(df)[colnames(df)==group_var] <- "group_n"
df_col <- df %>%
group_by(vars(group_var)) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
### now gather (i.e. make long) the data frame
df_long <- gather(df_col, race, total, -group_var)
### now run the preserve whol number command
df_long$total_new <- round_preserve_sum(df_long, 0)
## select out the old num
df_long <- subset(df_long, select=-c(total))
## now make into wide data again
df_wide <- spread(df_long, key=race, value=total_new)
colnames(df_wide)[colnames(df)=="group_n"] <- group_var
return(df_wide)
}
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
wru_aggregate_pres <- function(df, group_var="zcta5", predNames=c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth")){
list.of.packages <- c("tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
## collapse the data by the groupvar
colnames(df)[colnames(df)==group_var] <- "group_n"
df_col <- df %>%
group_by(group_n) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
### now gather (i.e. make long) the data frame
df_long <- gather(df_col, race, total, -group_var)
### now run the preserve whol number command
df_long$total_new <- round_preserve_sum(df_long, 0)
## select out the old num
df_long <- subset(df_long, select=-c(total))
## now make into wide data again
df_wide <- spread(df_long, key=race, value=total_new)
colnames(df_wide)[colnames(df)=="group_n"] <- group_var
return(df_wide)
}
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
wru_aggregate_pres <- function(df, group_var="zcta5", predNames=c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth")){
list.of.packages <- c("tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
## collapse the data by the groupvar
colnames(df)[colnames(df)==group_var] <- "group_n"
df_col <- df %>%
group_by(group_n) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
### now gather (i.e. make long) the data frame
df_long <- gather(df_col, race, total, -group_n)
### now run the preserve whol number command
df_long$total_new <- round_preserve_sum(df_long, 0)
## select out the old num
df_long <- subset(df_long, select=-c(total))
## now make into wide data again
df_wide <- spread(df_long, key=race, value=total_new)
colnames(df_wide)[colnames(df)=="group_n"] <- group_var
return(df_wide)
}
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
wru_aggregate_pres <- function(df, group_var="zcta5", predNames=c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth")){
list.of.packages <- c("tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
## collapse the data by the groupvar
colnames(df)[colnames(df)==group_var] <- "group_n"
df_col <- df %>%
group_by(group_n) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
### now gather (i.e. make long) the data frame
df_long <- gather(df_col, race, total, -group_n)
### now run the preserve whol number command
df_long$total_new <- round_preserve_sum(df_long$total, 0)
## select out the old num
df_long <- subset(df_long, select=-c(total))
## now make into wide data again
df_wide <- spread(df_long, key=race, value=total_new)
colnames(df_wide)[colnames(df)=="group_n"] <- group_var
return(df_wide)
}
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
View(wi_data4col)
wru_aggregate_pres <- function(df, group_var="zcta5", predNames=c("pred.whi","pred.bla","pred.his","pred.asi","pred.oth")){
list.of.packages <- c("tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
## collapse the data by the groupvar
colnames(df)[colnames(df)==group_var] <- "group_n"
df_col <- df %>%
group_by(group_n) %>%
select(all_of(predNames)) %>%
summarise(across(where(is.numeric), ~sum(.x, na.rm=T)))
### now gather (i.e. make long) the data frame
df_long <- gather(df_col, race, total, -group_n)
### now run the preserve whol number command
df_long$total_new <- round_preserve_sum(df_long$total, 0)
## select out the old num
df_long <- subset(df_long, select=-c(total))
## now make into wide data again
df_wide <- spread(df_long, key=race, value=total_new)
colnames(df_wide)[colnames(df)=="group_n"] <- group_var
## now total
df_wide$total_pop <- rowSums(df_wide[,2:6])
return(df_wide)
}
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
wi_data <- zipWRUext2::wi_data
wi_data4 <- zip_wru(wi_data, state="WISCONSIN",  year1="2010", zip_col="zcta5", surname_field = "lastname")
wi_data4col <- wru_aggregate_pres(wi_data4, group_var = "zcta5")
head(wi_data4col)
document()
